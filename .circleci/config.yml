# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  run_tests:
    docker:
      - image: circleci/node:14
      - image: cimg/postgres:15.2.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: create docker container
          command: |
            docker run -d --name postgres -p 5435:5432 -e POSTGRES_PASSWORD=ibraheem cimg/postgres:15.2.0
      - run:
          name: install npm dependencies
          command: | 
            npm install
      - run: 
          name: Run run_tests
          command: |
            npm run test:e2e
      - run:
          name: remove database
          command: |
            docker rm -f postgres
      - store_test_results:
          path: test-results

  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
  run-tests:
    jobs:
      - run_tests
